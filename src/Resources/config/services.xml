<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <service id="api_redis.client" class="Experteam\ApiRedisBundle\Service\RedisClient\RedisClient" public="true">
            <argument key="$redis" type="service" id="Redis"/>
            <argument key="$serializer" type="service" id="Symfony\Component\Serializer\SerializerInterface"/>
        </service>
        <service id="Experteam\ApiRedisBundle\Service\RedisClient\RedisClientInterface" alias="api_redis.client"/>

        <service id="api_redis.transport" class="Experteam\ApiRedisBundle\Service\RedisTransport\RedisTransport" public="true">
            <argument key="$parameterBag" type="service" id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface"/>
            <argument key="$entityManager" type="service" id="Doctrine\ORM\EntityManagerInterface"/>
            <argument key="$redisClient" type="service" id="Experteam\ApiRedisBundle\Service\RedisClient\RedisClientInterface"/>
            <argument key="$serializer" type="service" id="Symfony\Component\Serializer\SerializerInterface"/>
            <argument key="$messageBus" type="service" id="Symfony\Component\Messenger\MessageBusInterface"/>
            <argument key="$elkLogger" type="service" id="Experteam\ApiBaseBundle\Service\ELKLogger\ELKLoggerInterface"/>
        </service>
        <service id="Experteam\ApiRedisBundle\Service\RedisTransport\RedisTransportInterface" alias="api_redis.transport"/>

        <service id="Redis" alias="snc_redis.default"/>

        <service id="api_redis.check_data_command" class="Experteam\ApiRedisBundle\Command\CheckDataCommand">
            <argument key="$parameterBag" type="service" id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface"/>
            <argument key="$redisClient" type="service" id="Experteam\ApiRedisBundle\Service\RedisClient\RedisClientInterface"/>
            <argument key="$redisTransport" type="service" id="Experteam\ApiRedisBundle\Service\RedisTransport\RedisTransportInterface"/>
            <argument key="$logger" type="service" id="Psr\Log\LoggerInterface"/>
            <tag name="console.command" command="experteam:redis:check:data"/>
        </service>

        <service id="api_redis.refresh_command" class="Experteam\ApiRedisBundle\Command\RefreshCommand">
            <argument key="$redisTransport" type="service" id="Experteam\ApiRedisBundle\Service\RedisTransportV2\RedisTransportV2Interface"/>
            <tag name="console.command" command="experteam:redis:refresh"/>
        </service>

        <service id="api_redis.transport.v2" class="Experteam\ApiRedisBundle\Service\RedisTransportV2\RedisTransportV2" public="true">
            <argument key="$parameterBag" type="service" id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface"/>
            <argument key="$entityManager" type="service" id="Doctrine\ORM\EntityManagerInterface"/>
            <argument key="$redisClient" type="service" id="Experteam\ApiRedisBundle\Service\RedisClient\RedisClientInterface"/>
            <argument key="$serializer" type="service" id="Symfony\Component\Serializer\SerializerInterface"/>
            <argument key="$messageBus" type="service" id="Symfony\Component\Messenger\MessageBusInterface"/>
            <argument key="$elkLogger" type="service" id="Experteam\ApiBaseBundle\Service\ELKLogger\ELKLoggerInterface"/>
        </service>
        <service id="Experteam\ApiRedisBundle\Service\RedisTransportV2\RedisTransportV2Interface" alias="api_redis.transport.v2"/>

        <service id="api_redis.translatable.normalizer" class="Experteam\ApiRedisBundle\Serializer\TranslatableNormalizer">
            <argument key="$normalizer" type="service" id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer"/>
            <argument key="$manager" type="service" id="Doctrine\ORM\EntityManagerInterface"/>
            <tag name="serializer.normalizer"/>
        </service>

        <service id="Experteam\ApiRedisBundle\MessageSerializer\FailedMessageSerializer">
            <argument key="$decoder" type="service" id="Symfony\Component\Serializer\Encoder\DecoderInterface"/>
            <argument key="$encoder" type="service" id="Symfony\Component\Serializer\Encoder\EncoderInterface"/>
        </service>

        <service id="Experteam\ApiRedisBundle\MessageHandler\SendEntityToRedisMessageHandler">
            <argument key="$entityManager" type="service" id="Doctrine\ORM\EntityManagerInterface"/>
            <argument key="$redisTransportV2" type="service" id="Experteam\ApiRedisBundle\Service\RedisTransportV2\RedisTransportV2Interface"/>
            <tag name="messenger.message_handler" handles="Experteam\ApiRedisBundle\Message\SendEntityToRedisMessage"/>
        </service>

        <service id="Experteam\ApiRedisBundle\Validator\RedisForeignFieldValidator">
            <argument key="$redisClient" type="service" id="Experteam\ApiRedisBundle\Service\RedisClient\RedisClientInterface"/>
            <tag name="validator.constraint_validator"/>
        </service>
    </services>
</container>